//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/ActionMap/BattleControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BattleControl: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BattleControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""BattleControl"",
    ""maps"": [
        {
            ""name"": ""MoveMenu"",
            ""id"": ""b98df323-7925-408d-a54b-552c9ce6e906"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""15f9ddd9-9521-409a-aa99-f6ed1da4defa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ConfirmAction"",
                    ""type"": ""Button"",
                    ""id"": ""0e6d0fa6-fa7d-409d-a7eb-94707bb979a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""KeyboardArrow"",
                    ""id"": ""11d85117-e806-4acc-9b22-671945086f09"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c57771c6-623b-403a-9947-84d0df23b215"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""978a0062-20fd-4454-a418-7183a3e129e5"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""17819647-560c-47dd-8415-70df8650e27c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ceec9234-eb6b-4a19-ba42-da6c852160b0"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""6b587fe7-3c7d-4cff-86db-8a75cfd8b129"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3ed77377-82c8-4123-b609-0759a722d3d2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6fd372bb-51cc-4f5e-9395-20906a6afdb4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""39282823-e269-43ba-a20a-3148957cae30"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""eafb0603-f28c-4419-81f6-cc4ae9ac5c6b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""35117a01-d337-4a13-ab03-885584dc0140"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""66d8abb6-8ca8-458c-a2bd-00acb61ba72a"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b61b3daf-836b-4452-be4f-0bd3565b3354"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aed258c9-a196-40b9-b36e-89dc5d618f0f"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""399aaf39-89d3-4dc4-916f-0fbdddc30699"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bd822659-ce55-4177-abd1-4456b8f41be8"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConfirmAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4a037f8-86ba-40c0-b545-4264360dc74d"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConfirmAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c60eaa7c-19fb-4d14-91cb-7a654c673763"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ConfirmAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MoveMenu
        m_MoveMenu = asset.FindActionMap("MoveMenu", throwIfNotFound: true);
        m_MoveMenu_Move = m_MoveMenu.FindAction("Move", throwIfNotFound: true);
        m_MoveMenu_ConfirmAction = m_MoveMenu.FindAction("ConfirmAction", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MoveMenu
    private readonly InputActionMap m_MoveMenu;
    private List<IMoveMenuActions> m_MoveMenuActionsCallbackInterfaces = new List<IMoveMenuActions>();
    private readonly InputAction m_MoveMenu_Move;
    private readonly InputAction m_MoveMenu_ConfirmAction;
    public struct MoveMenuActions
    {
        private @BattleControl m_Wrapper;
        public MoveMenuActions(@BattleControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_MoveMenu_Move;
        public InputAction @ConfirmAction => m_Wrapper.m_MoveMenu_ConfirmAction;
        public InputActionMap Get() { return m_Wrapper.m_MoveMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MoveMenuActions set) { return set.Get(); }
        public void AddCallbacks(IMoveMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_MoveMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MoveMenuActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @ConfirmAction.started += instance.OnConfirmAction;
            @ConfirmAction.performed += instance.OnConfirmAction;
            @ConfirmAction.canceled += instance.OnConfirmAction;
        }

        private void UnregisterCallbacks(IMoveMenuActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @ConfirmAction.started -= instance.OnConfirmAction;
            @ConfirmAction.performed -= instance.OnConfirmAction;
            @ConfirmAction.canceled -= instance.OnConfirmAction;
        }

        public void RemoveCallbacks(IMoveMenuActions instance)
        {
            if (m_Wrapper.m_MoveMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMoveMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_MoveMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MoveMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MoveMenuActions @MoveMenu => new MoveMenuActions(this);
    public interface IMoveMenuActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnConfirmAction(InputAction.CallbackContext context);
    }
}
